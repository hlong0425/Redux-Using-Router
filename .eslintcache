[{"D:\\code\\Redux-Using-Router\\src\\index.js":"1","D:\\code\\Redux-Using-Router\\src\\App.js":"2","D:\\code\\Redux-Using-Router\\src\\components\\layout\\MainNavigation.js":"3","D:\\code\\Redux-Using-Router\\src\\components\\quotes\\QuoteList.js":"4","D:\\code\\Redux-Using-Router\\src\\components\\quotes\\QuoteItem.js":"5","D:\\code\\Redux-Using-Router\\src\\components\\UI\\Card.js":"6","D:\\code\\Redux-Using-Router\\src\\components\\layout\\Layout.js":"7","D:\\code\\Redux-Using-Router\\src\\components\\quotes\\QuoteForm.js":"8","D:\\code\\Redux-Using-Router\\src\\components\\UI\\LoadingSpinner.js":"9","D:\\code\\Redux-Using-Router\\src\\pages\\AllQuotes.js":"10","D:\\code\\Redux-Using-Router\\src\\pages\\NewQuotes.js":"11","D:\\code\\Redux-Using-Router\\src\\pages\\QuotesDetail.js":"12","D:\\code\\Redux-Using-Router\\src\\components\\comments\\Comments.js":"13","D:\\code\\Redux-Using-Router\\src\\components\\comments\\NewCommentForm.js":"14","D:\\code\\Redux-Using-Router\\src\\components\\quotes\\HighlightedQuote.js":"15","D:\\code\\Redux-Using-Router\\src\\pages\\NotFound.js":"16","D:\\code\\Redux-Using-Router\\src\\hook\\useHttp.js":"17","D:\\code\\Redux-Using-Router\\src\\lib\\api.js":"18","D:\\code\\Redux-Using-Router\\src\\components\\quotes\\NoQuotesFound.js":"19","D:\\code\\Redux-Using-Router\\src\\components\\comments\\CommentsList.js":"20","D:\\code\\Redux-Using-Router\\src\\components\\comments\\CommentItem.js":"21"},{"size":222,"mtime":1644482334922,"results":"22","hashOfConfig":"23"},{"size":1447,"mtime":1644830142011,"results":"24","hashOfConfig":"23"},{"size":856,"mtime":1644482449026,"results":"25","hashOfConfig":"23"},{"size":1348,"mtime":1644580723539,"results":"26","hashOfConfig":"23"},{"size":455,"mtime":1644502728070,"results":"27","hashOfConfig":"23"},{"size":156,"mtime":1644483184937,"results":"28","hashOfConfig":"23"},{"size":399,"mtime":1644828966545,"results":"29","hashOfConfig":"23"},{"size":1739,"mtime":1644804445443,"results":"30","hashOfConfig":"23"},{"size":167,"mtime":1616574972000,"results":"31","hashOfConfig":"23"},{"size":1033,"mtime":1644803402212,"results":"32","hashOfConfig":"23"},{"size":751,"mtime":1644804778258,"results":"33","hashOfConfig":"23"},{"size":1679,"mtime":1644809723739,"results":"34","hashOfConfig":"23"},{"size":1871,"mtime":1644826785234,"results":"35","hashOfConfig":"23"},{"size":1502,"mtime":1644826754993,"results":"36","hashOfConfig":"23"},{"size":270,"mtime":1616574972000,"results":"37","hashOfConfig":"23"},{"size":165,"mtime":1644507403897,"results":"38","hashOfConfig":"23"},{"size":1482,"mtime":1644769951713,"results":"39","hashOfConfig":"23"},{"size":2534,"mtime":1644811962579,"results":"40","hashOfConfig":"23"},{"size":331,"mtime":1644803830324,"results":"41","hashOfConfig":"23"},{"size":334,"mtime":1616574972000,"results":"42","hashOfConfig":"23"},{"size":200,"mtime":1616574972000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"180hx51",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\code\\Redux-Using-Router\\src\\index.js",[],["90","91"],"D:\\code\\Redux-Using-Router\\src\\App.js",["92","93"],"import React, { Suspense } from \"react\";\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport MainNavigation from \"./components/layout/MainNavigation\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\nimport Layout from './components/layout/Layout'\n// import AllQuotes from './pages/AllQuotes';\n// import QuotesDetail from './pages/QuotesDetail'\n// import NewQuotes from \"./pages/NewQuotes\";\n// import NotFound from './pages/NotFound';\n\nconst AllQuotes = React.lazy(() => import('./pages/AllQuotes'));\nconst QuotesDetail = React.lazy(() => import('./pages/QuotesDetail'));\nconst NewQuotes = React.lazy(() => import(\"./pages/NewQuotes\"));\nconst NotFound = React.lazy(() => import('./pages/NotFound'));\n\n\nfunction App() {\n  return (\n\n    <Layout>\n      <Suspense fallback={<div className=\"centered\">\n        <LoadingSpinner />\n      </div>}>\n        <Switch>\n          <Route exact path='/'>\n            <Redirect to='/quotes'></Redirect>\n          </Route>\n          <Route exact path='/quotes'>\n            <AllQuotes />\n          </Route>\n\n          <Route path='/quotes/:id'>\n            <QuotesDetail />\n          </Route>\n\n          <Route path='/new-quotes'>\n            <NewQuotes />\n          </Route>\n\n          <Route patch='*'>\n            <NotFound />\n          </Route>\n        </Switch>\n      </Suspense>\n    </Layout>\n\n  );\n}\n\nexport default App;\n","D:\\code\\Redux-Using-Router\\src\\components\\layout\\MainNavigation.js",[],"D:\\code\\Redux-Using-Router\\src\\components\\quotes\\QuoteList.js",[],"D:\\code\\Redux-Using-Router\\src\\components\\quotes\\QuoteItem.js",[],"D:\\code\\Redux-Using-Router\\src\\components\\UI\\Card.js",[],"D:\\code\\Redux-Using-Router\\src\\components\\layout\\Layout.js",[],"D:\\code\\Redux-Using-Router\\src\\components\\quotes\\QuoteForm.js",[],"D:\\code\\Redux-Using-Router\\src\\components\\UI\\LoadingSpinner.js",[],"D:\\code\\Redux-Using-Router\\src\\pages\\AllQuotes.js",[],"D:\\code\\Redux-Using-Router\\src\\pages\\NewQuotes.js",[],"D:\\code\\Redux-Using-Router\\src\\pages\\QuotesDetail.js",[],"D:\\code\\Redux-Using-Router\\src\\components\\comments\\Comments.js",["94"],"import { useEffect, useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hook/useHttp';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList'\nconst Comments = () => {\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n  console.log('Load Comments page');\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { id: quoteId } = params;\n\n  useEffect(() => {\n    sendRequest(params.id);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  // Địa chỉ đang là a1; \n  // const addedCommentHandler = useCallback(() => {\n  //   sendRequest(quoteId);\n  // }, [quoteId, sendRequest])\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    )\n  }\n\n  if (status === 'completed' && loadedComments?.length > 0) {\n    comments = <CommentsList comments={loadedComments} />\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = <p>No comments were added yet</p>\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={quoteId} onAddedComment={addedCommentHandler} />}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","D:\\code\\Redux-Using-Router\\src\\components\\comments\\NewCommentForm.js",["95"],"import { useEffect, useRef } from 'react';\nimport useHttp from '../../hook/useHttp';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const { status, error, sendRequest } = useHttp(addComment);\n  const commentTextRef = useRef();\n  const { onAddedComment } = props; //Địa chỉ vẫn là A1; \n\n  console.log(status);\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      props.onAddedComment();\n    }\n  }, [status, error, onAddedComment])\n\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    //Validate\n    const commentedValue = commentTextRef.current.value\n    if (commentedValue.trim() === '') {\n      return\n    }\n\n    // send comment to server\n    const quoteId = props.quoteId;\n    sendRequest({ commentData: { text: commentedValue }, quoteId });\n  };\n\n\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","D:\\code\\Redux-Using-Router\\src\\components\\quotes\\HighlightedQuote.js",[],"D:\\code\\Redux-Using-Router\\src\\pages\\NotFound.js",[],"D:\\code\\Redux-Using-Router\\src\\hook\\useHttp.js",[],"D:\\code\\Redux-Using-Router\\src\\lib\\api.js",[],"D:\\code\\Redux-Using-Router\\src\\components\\quotes\\NoQuotesFound.js",[],"D:\\code\\Redux-Using-Router\\src\\components\\comments\\CommentsList.js",[],"D:\\code\\Redux-Using-Router\\src\\components\\comments\\CommentItem.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":18},{"ruleId":"100","severity":1,"message":"104","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":22},{"ruleId":"105","severity":1,"message":"106","line":19,"column":6,"nodeType":"107","endLine":19,"endColumn":28,"suggestions":"108"},{"ruleId":"105","severity":1,"message":"109","line":17,"column":6,"nodeType":"107","endLine":17,"endColumn":37,"suggestions":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'MainNavigation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["113"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["114"],"no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [params.id, quoteId, sendRequest]",{"range":"119","text":"120"},"Update the dependencies array to be: [status, error, onAddedComment, props]",{"range":"121","text":"122"},[706,728],"[params.id, quoteId, sendRequest]",[552,583],"[status, error, onAddedComment, props]"]